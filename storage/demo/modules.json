{"data":[{"dependencies":[],"singleton":false,"category":"security","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Auto Lock","description":"Door/Window Sensor automatically closes lock when door is closed","BinarySensor":null,"DoorLock":null},"schema":{"type":"object","properties":{"BinarySensor":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorBinary:deviceId","required":true},"DoorLock":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_doorlock:deviceId","required":true}},"required":true},"options":{"fields":{"BinarySensor":{"label":"Door/Window Sensor","type":"select","datasource":"namespaces"},"DoorLock":{"label":"Door Lock","type":"select","datasource":"namespaces"}}},"id":"AutoLock","className":"AutoLock","created":false},{"singleton":false,"dependencies":[],"category":"scheduling","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.1","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Auto Off","description":"Turns off automatically devices after a defined time","timeout":5,"device":""},"schema":{"description":"Automatically turn of devices after N seconds","type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchBinary:deviceId,namespaces:devices_switchMultilevel:deviceId","required":true},"timeout":{"type":"number","required":true}},"required":false},"options":{"fields":{"device":{"label":"The device to be turned off after the timeout","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName,namespaces:devices_switchMultilevel:deviceName"},"timeout":{"label":"Timout in seconds"}}},"id":"AutoOff","className":"AutoOff","created":false},{"singleton":true,"dependencies":["Cron"],"category":"devices","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"2.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Battery Polling","description":"Battery Polling notifications","launchWeekDay":0,"warningLevel":20},"schema":{"type":"object","properties":{"launchWeekDay":{"type":"number","required":true,"enum":[1,2,3,4,5,6,0]},"warningLevel":{"type":"select","required":true,"enum":[5,10,15,20]}},"required":false},"options":{"fields":{"launchWeekDay":{"label":"Do battery polling on","optionLabels":["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]},"warningLevel":{"label":"Warning Level","helper":"Warn if device's battery is below this level","optionLabels":["5%","10%","15%","20%"]}}},"id":"BatteryPolling","className":"BatteryPolling","created":false},{"singleton":false,"dependencies":[],"category":"automation","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Bind devices","description":"Bind actions on one device to others","sourceDevices":[],"targetDevices":[]},"schema":{"type":"object","properties":{"sourceDevices":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchControl:deviceId,namespaces:devices_switchBinary:deviceId,namespaces:devices_switchMultilevel:deviceId,namespaces:devices_sensorBinary:deviceId","required":true}},"targetDevices":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchBinary:deviceId,namespaces:devices_switchMultilevel:deviceId,namespaces:devices_doorlock:deviceId","required":true}}},"required":false},"options":{"fields":{"sourceDevices":{"label":"List of event sources","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchControl:deviceName,namespaces:devices_switchBinary:deviceName,namespaces:devices_switchMultilevel:deviceName,namespaces:devices_sensorBinary:deviceName"}}},"targetDevices":{"label":"List of actors","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName,namespaces:devices_switchMultilevel:deviceName,namespaces:devices_doorlock:deviceName"}}}}},"id":"BindDevices","className":"BindDevices","created":false},{"singleton":false,"dependencies":[],"category":"surveillance","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Web Camera","description":"This module include configuration for a camera and create camera device","url":"","zoomInUrl":"","zoomOutUrl":"","leftUrl":"","rightUrl":"","upUrl":"","downUrl":"","openUrl":"","closeUrl":"","user":"","password":"","doorDevices":[]},"schema":{"type":"object","properties":{"url":{"format":"uri","required":true},"zoomInUrl":{"format":"uri","required":false},"zoomOutUrl":{"format":"uri","required":false},"leftUrl":{"format":"uri","required":false},"rightUrl":{"format":"uri","required":false},"upUrl":{"format":"uri","required":false},"downUrl":{"format":"uri","required":false},"openUrl":{"format":"uri","required":false},"closeUrl":{"format":"uri","required":false},"user":{"required":false},"password":{"required":false},"doorDevices":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_doorlock:deviceId,namespaces:devices_switchBinary:deviceId","required":false}}},"required":false},"options":{"fields":{"url":{"label":"Camera URL","type":"url","required":true},"zoomInUrl":{"label":"ZoomIn URL","type":"url","required":false},"zoomOutUrl":{"label":"ZoomOut URL","type":"url","required":false},"leftUrl":{"label":"Left URL","type":"url","required":false},"rightUrl":{"label":"Right URL","type":"url","required":false},"upUrl":{"label":"Up URL","type":"url","required":false},"downUrl":{"label":"Down URL","type":"url","required":false},"openUrl":{"label":"Open URL","type":"url","required":false},"closeUrl":{"label":"Close URL","type":"url","required":false},"user":{"label":"Username for HTTP authentication","helper":"Leave empty if camera is not protected by a password","required":false},"password":{"label":"Password for HTTP authentication","helper":"Leave empty if camera is not protected by a password","required":false},"doorDevices":{"label":"Door device","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_doorlock:deviceName,namespaces:devices_switchBinary:deviceName"}}}}},"id":"Camera","className":"Camera","created":false},{"singleton":false,"dependencies":[],"category":"devices","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Code device","description":"Create virtual device based on JavaScript code.","deviceType":"","setterOn_toggleButton":"","getter_sensorBinary":"","getterPollInterval_sensortBinary":0,"getter_sensorMultilevel":"","getterPollInterval_sensorMultilevel":0,"scale_sensorMultilevel":"","setterOn_switchBinary":"","setterOff_switchBinary":"","getter_switchBinary":"","getterPollInterval_switchtBinary":0,"setterLevel_switchMultilevel":"","getter_switchMultilevel":"","getterPollInterval_switchtMultilevel":0},"schema":{"label":"Select action condition","type":"object","properties":{"deviceType":{"type":"string","enum":["toggleButton","sensorBinary","sensorMultilevel","switchBinary","switchMultilevel"],"default":"toggleButton","required":true},"setterOn_toggleButton":{"type":"string","required":true,"dependencies":"deviceType"},"getter_sensorBinary":{"type":"string","required":true,"dependencies":"deviceType"},"getterPollInterval_sensorBinary":{"type":"integer","required":false,"dependencies":"deviceType"},"getter_sensorMultilevel":{"type":"string","required":true,"dependencies":"deviceType"},"getterPollInterval_sensorMultilevel":{"type":"integer","required":false,"dependencies":"deviceType"},"scale_sensorMultilevel":{"type":"string","required":false,"dependencies":"deviceType"},"setterOn_switchBinary":{"type":"string","required":true,"dependencies":"deviceType"},"setterOff_switchBinary":{"type":"string","required":true,"dependencies":"deviceType"},"getter_switchBinary":{"type":"string","required":false,"dependencies":"deviceType"},"getterPollInterval_switchBinary":{"type":"integer","required":false,"dependencies":"deviceType"},"setterLevel_switchMultilevel":{"type":"string","required":true,"dependencies":"deviceType"},"getter_switchMultilevel":{"type":"string","required":false,"dependencies":"deviceType"},"getterPollInterval_switchMultilevel":{"type":"integer","required":false,"dependencies":"deviceType"}}},"options":{"fields":{"deviceType":{"type":"select"},"setterOn_toggleButton":{"label":"Code for action On","placeholder":"somefunction()","dependencies":{"deviceType":"toggleButton"}},"getter_sensorBinary":{"label":"Code to get value","placeholder":"somefunction()","helper":"Should return \"on\"/\"off\" values","dependencies":{"deviceType":"sensorBinary"}},"getterPollInterval_sensorBinary":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"sensorBinary"}},"getter_sensorMultilevel":{"label":"Code to get value","placeholder":"somefunction()","helper":"Should return number","dependencies":{"deviceType":"sensorMultilevel"}},"getterPollInterval_sensorMultilevel":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"sensorMultilevel"}},"scale_sensorMultilevel":{"label":"Sensor scale","dependencies":{"deviceType":"sensorMultilevel"}},"setterOn_switchBinary":{"label":"Code for action On","placeholder":"somefunction()","dependencies":{"deviceType":"switchBinary"}},"setterOff_switchBinary":{"label":"Code for action Off","placeholder":"somefunction(%%)","helper":"%% will represent value","dependencies":{"deviceType":"switchBinary"}},"getter_switchBinary":{"label":"Code to get value","placeholder":"somefunction()","helper":"Should return \"on\"/\"off\" values","dependencies":{"deviceType":"switchBinary"}},"getterPollInterval_switchBinary":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"switchBinary"}},"setterLevel_switchMultilevel":{"label":"Code for action","placeholder":"somefunction(%%)","helper":"%% will represent value","dependencies":{"deviceType":"switchMultilevel"}},"getter_switchMultilevel":{"label":"Code to get value","placeholder":"somefunction()","helper":"Should return value from 0 to 99","dependencies":{"deviceType":"switchMultilevel"}},"getterPollInterval_switchMultilevel":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"switchMultilevel"}}}},"id":"CodeDevice","className":"CodeDevice","created":false},{"singleton":true,"dependencies":[],"category":"scheduling","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Cron scheduler","description":"Scheduler used by other modules"},"schema":{},"options":{},"id":"Cron","className":"Cron","created":true},{"singleton":false,"dependencies":[],"category":"scripting","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Load custom JavaScript code","description":"Allows to load custom JavaScript code on system load","customCode":""},"schema":{"description":"User defined JavaScript code to be executed on load","type":"object","properties":{"customCode":{"type":"string"}},"required":false},"options":{"toolbarSticky":true,"fields":{"customCode":{"type":"textarea","label":"Your JavaScript code:","cols":40}}},"id":"CustomUserCode","className":"CustomUserCode","created":false},{"singleton":false,"dependencies":[],"category":"scripting","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Load custom JavaScript file","description":"Allows to load custom files from automation/ folder","customCodeFiles":[]},"schema":{"description":"User defined JavaScript files to be executed on load","type":"object","properties":{"customCodeFiles":{"type":"array","items":{"title":"File name","type":"string"}}},"required":false},"options":{"fields":{"customCodeFiles":{"type":"array","helper":"Add paths to files relative to automation/ folder."}}},"id":"CustomUserCodeLoader","className":"CustomUserCodeLoader","created":false},{"singleton":false,"dependencies":[],"category":"scenes","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Delayed Scene","description":"Activate scene after a defined timeout after","singleTimer":true,"triggerScene":"","delayedScene":""},"schema":{"type":"object","properties":{"singleTimer":{"type":"boolean"},"triggerScene":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true},"delayedScene":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true},"delay":{"type":"integer","minimum":1}},"required":false},"options":{"fields":{"singleTimer":{"label":"","rightLabel":"Restart timer on trigger instead of starting new timer"},"triggerScene":{"label":"Scene that trigger timer start","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"},"delayedScene":{"label":"Delayed action","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"},"delay":{"label":"Delay in seconds","type":"integer"}}},"id":"DelayedScene","className":"DelayedScene","created":false},{"singleton":false,"dependencies":[],"category":"devices","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Dummy device","description":"Create a Dummy device","deviceType":"switchBinary"},"schema":{"type":"object","properties":{"deviceType":{"type":"string","enum":["switchBinary","switchMultilevel"],"default":"switchBinary","required":true}}},"options":{"fields":{"deviceType":{"label":"Select device type","type":"select","optionLabels":["Binary switch","Multilevel switch"]}}},"id":"DummyDevice","className":"DummyDevice","created":false},{"singleton":false,"dependencies":[],"category":"devices","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Group devices","description":"Group several devices together","isDimmable":false,"devices":[],"scenesOn":[],"scenesOff":[]},"schema":{"type":"object","properties":{"isDimmable":{"type":"boolean"},"devices":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchBinary:deviceId,namespaces:devices_switchMultilevel:deviceId,namespaces:devices_doorlock:deviceId","required":true},"invert":{"type":"boolean","default":false}}}},"scenesOn":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true}},"scenesOff":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true}}},"required":false},"options":{"fields":{"isDimmable":{"label":"","rightLabel":"Dimmable"},"devices":{"label":"Group devices","fields":{"item":{"fields":{"device":{"label":"","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName,namespaces:devices_switchMultilevel:deviceName,namespaces:devices_doorlock:deviceName"},"invert":{"type":"checkbox","rightLabel":"Invert action"}}}}},"scenesOn":{"label":"List of scenes to activate on On action","fields":{"item":{"datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"}}},"scenesOff":{"label":"List of scenes to activate on Off action","fields":{"item":{"datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"}}}}},"id":"GroupDevices","className":"GroupDevices","created":false},{"singleton":false,"dependencies":[],"category":"devices","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"HTTP device","description":"Create virtual device based on HTTP data.","deviceType":"","setterOn_toggleButton":"","getter_sensorBinary":"","getterParser_sensorBinary":"","getterPollInterval_sensorBinary":0,"getter_sensorMultilevel":"","getterParser_sensorMultilevel":"","getterPollInterval_sensorMultilevel":0,"scale_sensorMultilevel":"","setterOn_switchBinary":"","setterOff_switchBinary":"","getter_switchBinary":"","getterParser_switchBinary":"","getterPollInterval_switchBinary":0,"setterLevel_switchMultilevel":"","getter_switchMultilevel":"","getterParser_switchMultilevel":"","getterPollInterval_switchMultilevel":0,"method":"GET"},"schema":{"label":"Select action condition","type":"object","properties":{"deviceType":{"type":"string","enum":["toggleButton","sensorBinary","sensorMultilevel","switchBinary","switchMultilevel"],"default":"toggleButton","required":true},"setterOn_toggleButton":{"type":"string","required":true,"dependencies":"deviceType"},"getter_sensorBinary":{"type":"string","required":true,"dependencies":"deviceType"},"getterParser_sensorBinary":{"type":"string","required":false,"dependencies":"deviceType"},"getterPollInterval_sensorBinary":{"type":"integer","required":false,"dependencies":"deviceType"},"getter_sensorMultilevel":{"type":"string","required":true,"dependencies":"deviceType"},"getterParser_sensorMultilevel":{"type":"string","required":false,"dependencies":"deviceType"},"getterPollInterval_sensorMultilevel":{"type":"integer","required":false,"dependencies":"deviceType"},"scale_sensorMultilevel":{"type":"string","required":false,"dependencies":"deviceType"},"setterOn_switchBinary":{"type":"string","required":true,"dependencies":"deviceType"},"setterOff_switchBinary":{"type":"string","required":true,"dependencies":"deviceType"},"getter_switchBinary":{"type":"string","required":false,"dependencies":"deviceType"},"getterParser_switchBinary":{"type":"string","required":false,"dependencies":"deviceType"},"getterPollInterval_switchBinary":{"type":"integer","required":false,"dependencies":"deviceType"},"setterLevel_switchMultilevel":{"type":"string","required":true,"dependencies":"deviceType"},"getter_switchMultilevel":{"type":"string","required":false,"dependencies":"deviceType"},"getterParser_switchMultilevel":{"type":"string","required":false,"dependencies":"deviceType"},"getterPollInterval_switchMultilevel":{"type":"integer","required":false,"dependencies":"deviceType"},"method":{"type":"string","required":true,"enum":["GET","POST"]}}},"options":{"fields":{"deviceType":{"type":"select"},"setterOn_toggleButton":{"label":"URL for action On","placeholder":"http://192.168.0.100/action/on","dependencies":{"deviceType":"toggleButton"}},"getter_sensorBinary":{"label":"URL to get value","placeholder":"http://192.168.0.100/get/value","dependencies":{"deviceType":"sensorBinary"}},"getterParser_sensorBinary":{"label":"Inline Javascript to parse incoming data to \"on\"/\"off\" strings","helper":"Can be empty to use string as is. Example: $$.split(\":\")[1] or $$.data.metrics.level or $$ === \"ON\" ? \"on\" : \"off\"","dependencies":{"deviceType":"sensorBinary"}},"getterPollInterval_sensorBinary":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"sensorBinary"}},"getter_sensorMultilevel":{"label":"URL to get value","placeholder":"http://192.168.0.100/get/value","dependencies":{"deviceType":"sensorMultilevel"}},"getterParser_sensorMultilevel":{"label":"Inline Javascript to parse incoming data to number","helper":"Can be empty to use parseFloat() function. Example: $$.split(\":\")[1] or parseInt($$, 16) or $$.data.metrics.level or parseFloat($$.findOne(\"/A/B[C='123']/D/text()\"))","dependencies":{"deviceType":"sensorMultilevel"}},"getterPollInterval_sensorMultilevel":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"sensorMultilevel"}},"scale_sensorMultilevel":{"label":"Sensor scale","dependencies":{"deviceType":"sensorMultilevel"}},"setterOn_switchBinary":{"label":"URL for action On","placeholder":"http://192.168.0.100/action/on","dependencies":{"deviceType":"switchBinary"}},"setterOff_switchBinary":{"label":"URL for action Off","placeholder":"http://192.168.0.100/action/off","dependencies":{"deviceType":"switchBinary"}},"getter_switchBinary":{"label":"URL to get value","placeholder":"http://192.168.0.100/get/value","dependencies":{"deviceType":"switchBinary"}},"getterParser_switchBinary":{"label":"Inline Javascript to parse incoming data to \"on\"/\"off\" strings","helper":"Can be empty to use string as is. Example: $$.split(\":\")[1] or $$.data.metrics.level or $$ === \"ON\" ? \"on\" : \"off\"","dependencies":{"deviceType":"switchBinary"}},"getterPollInterval_switchBinary":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"switchBinary"}},"setterLevel_switchMultilevel":{"label":"URL for action","placeholder":"http://192.168.0.100/action/set/$$","helper":"$$ is used to represent level in the URL. For example: http://host/dimmer/level/$$/set","dependencies":{"deviceType":"switchMultilevel"}},"getter_switchMultilevel":{"label":"URL to get value","placeholder":"http://192.168.0.100/get/value","dependencies":{"deviceType":"switchMultilevel"}},"getterParser_switchMultilevel":{"label":"Inline Javascript to parse incoming data to number","helper":"Can be empty to use parseFloat() function. Example: $$.split(\":\")[1] or parseInt($$, 16) or $$.data.metrics.level or parseFloat($$.findOne(\"/A/B[C='123']/D/text()\"))","dependencies":{"deviceType":"switchMultilevel"}},"getterPollInterval_switchMultilevel":{"label":"Interval in seconds between polling requests","helper":"Empty or 0 to disable periodical requests (explicit update command will stll initiate request process)","dependencies":{"deviceType":"switchMultilevel"}},"method":{"label":"HTTP method to use","type":"select"}}},"id":"HTTPDevice","className":"HTTPDevice","created":false},{"singleton":true,"dependencies":[],"category":"peripherals","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.1","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"HomeKit Gate","description":"Announces all widgets to HomeKit","name":"RaZberry"},"schema":{"type":"object","properties":{"name":{"type":"string","required":true}},"required":false},"options":{"fields":{"name":{"label":"Name as it appears in iOS devices"}}},"id":"HomeKitGate","className":"HomeKitGate","created":false},{"dependencies":[],"singleton":false,"category":"peripherals","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Import from remote Z-Way HA","description":"Create virtual device based remote Z-Way HA server.","url":"","dT":500,"skipDevices":[],"renderDevices":[]},"schema":{"label":"Select action condition","type":"object","properties":{"url":{"type":"string","required":true},"dT":{"type":"number","required":true},"skipDevices":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_all:deviceId","required":true}},"renderDevices":{"type":"array","items":{"type":"object","properties":{"deviceId":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_all:deviceId","required":true},"deviceType":{"type":"string","required":true}}}}}},"options":{"fields":{"url":{"label":"URL to remote side","placeholder":"http://192.168.0.100:8083"},"dT":{"label":"Update period (in milliseconds)"},"skipDevices":{"label":"List of devices not to import from remote side","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_all:deviceName"}}},"renderDevices":{"label":"List of devices imported from remote side (filled automatically)","fields":{"item":{"fields":{"deviceId":{"type":"select","readonly":true,"datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_all:deviceName"},"deviceType":{"readonly":true}}}}}}},"id":"ImportRemoteHA","className":"ImportRemoteHA","created":false},{"dependencies":[],"singleton":false,"category":"scenes","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Light scene","description":"Light scene defines state of switches, dimmers, blinds","switches":[],"dimmers":[],"scenes":[]},"schema":{"type":"object","properties":{"switches":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchBinary:deviceId","required":true},"status":{"type":"number","required":true,"enum":["off","on"]}}}},"dimmers":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchMultilevel:deviceId","required":true},"status":{"required":true,"minimum":0,"maximum":99}}}},"scenes":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true}}},"required":false},"options":{"fields":{"switches":{"label":"List of switches","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName"},"status":{"label":"","optionLabels":["Off","On"]}}}}},"dimmers":{"label":"List of dimmers","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchMultilevel:deviceName"},"status":{"label":"State","type":"integer"}}}}},"scenes":{"label":"List of scenes to activate","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"}}}}},"id":"LightScene","className":"LightScene","created":false},{"dependencies":[],"singleton":false,"category":"automation","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Logical rules","description":"Logical rules allows to trigger scenes based on devices status.","logicalOperator":"and","tests":[],"action":{}},"schema":{"title":"Select action condition","type":"object","properties":{"logicalOperator":{"type":"string","enum":["and","or"],"default":"and","required":true},"tests":{"type":"array","items":{"type":"object","properties":{"testType":{"type":"string","enum":["binary","multilevel","remote","time","nested"],"required":true,"default":"binary"},"testBinary":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorBinary:deviceId,namespaces:devices_switchBinary:deviceId","required":true},"testValue":{"type":"string","enum":["off","on"],"required":true}}},"testMultilevel":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorMultilevel:deviceId,namespaces:devices_switchMultilevel:deviceId","required":true},"testOperator":{"type":"string","enum":["=","!=",">",">=","<","<="],"required":true},"testValue":{"type":"number","required":true}}},"testRemote":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchControl:deviceId","required":true},"testValue":{"type":"string","enum":["off","on","upstart","upstop","downstart","downstop"],"required":true}}},"testTime":{"type":"object","dependencies":"testType","properties":{"testOperator":{"type":"string","enum":[">=","<="],"required":true},"testValue":{"type":"string","required":true}}},"testNested":{"type":"object","dependencies":"testType","properties":{"logicalOperator":{"type":"string","enum":["and","or"],"default":"or","required":true},"tests":{"type":"array","items":{"type":"object","properties":{"testType":{"type":"string","enum":["binary","multilevel","remote","time"],"required":true,"default":"binary"},"testBinary":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorBinary:deviceId,namespaces:devices_switchBinary:deviceId","required":true},"testValue":{"type":"string","enum":["off","on"],"required":true}}},"testMultilevel":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorMultilevel:deviceId,namespaces:devices_switchMultilevel:deviceId","required":true},"testOperator":{"type":"string","enum":["=","!=",">",">=","<","<="],"required":true},"testValue":{"type":"number","required":true}}},"testRemote":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchControl:deviceId","required":true},"testValue":{"type":"string","enum":["off","on","upstart","upstop","downstart","downstop"],"required":true}}},"testTime":{"type":"object","dependencies":"testType","properties":{"testOperator":{"type":"string","enum":[">=","<="],"required":true},"testValue":{"type":"string","required":true}}}}}}}}}}},"action":{"type":"object","properties":{"switches":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchBinary:deviceId","required":true},"status":{"type":"number","required":true,"enum":["off","on"]}}}},"dimmers":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchMultilevel:deviceId","required":true},"status":{"required":true,"minimum":0,"maximum":99}}}},"locks":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_doorlock:deviceId","required":true},"status":{"type":"number","required":true,"enum":["close","open"]}}}},"scenes":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true}}},"required":false}}},"options":{"renderform":"true","fields":{"logicalOperator":{"label":"Boolean operator","type":"select"},"tests":{"label":"Conditions","fields":{"item":{"fields":{"testType":{"type":"select","default":""},"testBinary":{"label":"Binary condition","dependencies":{"testType":"binary"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorBinary:deviceName,namespaces:devices_switchBinary:deviceName"}}},"testMultilevel":{"label":"Multilevel condition","dependencies":{"testType":"multilevel"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorMultilevel:deviceName,namespaces:devices_switchMultilevel:deviceName"},"testOperator":{"type":"select","optionLabels":["=","≠",">","≥","<","≤"]}}},"testRemote":{"label":"Remote condition","dependencies":{"testType":"remote"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchControl:deviceName"}}},"testTime":{"label":"Time condition","dependencies":{"testType":"time"},"fields":{"testOperator":{"type":"select","optionLabels":["≥","≤"]},"testValue":{"type":"time","maskString":"99:99","timeFormat":"hh:mm","timeFormatRegex":"/^(([0-1][0-9])|([2][0-3])):([0-5][0-9])$/"}}},"testNested":{"label":"Nested conditions","dependencies":{"testType":"nested"},"fields":{"logicalOperator":{"label":"Boolean operator","type":"select"},"tests":{"fields":{"item":{"fields":{"testType":{"label":"Boolean operator","type":"select","default":""},"testBinary":{"label":"Binary condition","dependencies":{"testType":"binary"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorBinary:deviceName,namespaces:devices_switchBinary:deviceName"}}},"testMultilevel":{"label":"Multilevel condition","dependencies":{"testType":"multilevel"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorMultilevel:deviceName,namespaces:devices_switchMultilevel:deviceName"},"testOperator":{"type":"select","optionLabels":["=","≠",">","≥","<","≤"]}}},"testRemote":{"label":"Remote condition","dependencies":{"testType":"remote"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchControl:deviceName"}}},"testTime":{"label":"Time condition","dependencies":{"testType":"time"},"fields":{"testValue":{"type":"time","maskString":"99:99","timeFormat":"hh:mm","timeFormatRegex":"/^(([0-1][0-9])|([2][0-3])):([0-5][0-9])$/"},"testOperator":{"type":"select","optionLabels":["≥","≤"]}}}}}}}}}}}}},"action":{"label":"Actions","fields":{"switches":{"label":"List of switches","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName"},"status":{"label":"","optionLabels":["Off","On"]}}}}},"dimmers":{"label":"List of dimmers","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchMultilevel:deviceName"},"status":{"label":"State","type":"integer"}}}}},"locks":{"label":"List of locks","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_doorlock:deviceName"},"status":{"label":"","optionLabels":["Close","Open"]}}}}},"scenes":{"label":"List of scenes to activate","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"}}}}}}},"id":"LogicalRules","className":"LogicalRules","created":false},{"dependencies":[],"singleton":false,"category":"notifications","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Notification","description":"Send email or sms","message":"","api_key":"","phone":"","email":""},"schema":{"type":"object","properties":{"message":{"type":"string","required":false},"phone":{"required":false,"pattern":"[1-9][0-9]*"},"api_key":{"required":false,"pattern":"[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{8}"},"email":{"type":"string","required":false}},"required":false},"options":{"fields":{"message":{"label":"text message"},"phone":{"label":"Phone number to send SMS. In form of 79261234567"},"api_key":{"label":"API key from SMS.ru","helper":"After registration on the right you will see api_id (looks like a43f6376-f57d-27e4-5981-ec48945d871f)"},"email":{"label":"email that will be notified"}}},"id":"Notification","className":"Notification","created":false},{"dependencies":[],"singleton":false,"category":"notifications","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"SMS.ru Notifications","description":"Sends all notifications via free SMS poroxy SMS.ru","api_key":"","phone":"","prefix":"Z-Way notification:"},"schema":{"description":"Send SMS via SMS.ru gateway. To register enter your phone number, name and password on http://sms.ru/?panel=register and confirm your phone number with a code.","type":"object","properties":{"phone":{"required":true,"pattern":"[1-9][0-9]*"},"prefix":{"required":false},"api_key":{"required":true,"pattern":"[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{8}"}},"required":false},"options":{"fields":{"phone":{"label":"Phone number to send SMS. In form of 79261234567"},"prefix":{"label":"Prefix for all messages"},"api_key":{"label":"API key from SMS.ru","helper":"After registration on the right you will see api_id (looks like a43f6376-f57d-27e4-5981-ec48945d871f)"}}},"id":"NotificationSMSru","className":"NotificationSMSru","created":false},{"dependencies":[],"singleton":true,"category":"peripherals","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"OpenRemote helper","description":"Set of helpers for OpenRemote server"},"schema":{},"options":{},"id":"OpenRemoteHelpers","className":"OpenRemoteHelpers","created":true},{"dependencies":[],"singleton":false,"category":"environment","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Weather Informer","description":"Weather informer provided by OpenWeatherMap.org","units":"celsius","city":"","country":""},"schema":{"type":"object","properties":{"city":{"type":"string","required":true},"country":{"type":"string","required":true},"units":{"type":"select","enum":["celsius","fahrenheit"],"required":true}},"required":true},"options":{"fields":{"city":{"label":"City","placeholder":"Moscow"},"country":{"label":"Country","placeholder":"Russia"},"units":{"label":"Units","optionLabels":["°C","°F"]}}},"id":"OpenWeather","className":"OpenWeather","created":false},{"dependencies":[],"singleton":false,"category":"devices","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"RGB","description":"Creates RGB device based on three different dimmers","red":null,"green":null,"blue":null},"schema":{"type":"object","properties":{"red":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchMultilevel:deviceId","required":true},"green":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchMultilevel:deviceId","required":true},"blue":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchMultilevel:deviceId","required":true}},"required":true},"options":{"fields":{"red":{"label":"Red","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchMultilevel:deviceName"},"green":{"label":"Green","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchMultilevel:deviceName"},"blue":{"label":"Blue","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchMultilevel:deviceName"}}},"id":"RGB","className":"RGB","created":false},{"dependencies":[],"singleton":false,"category":"scenes","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Round robin scene switcher","description":"Activate scenes in roundr robin policy","scenes":[]},"schema":{"type":"object","properties":{"scenes":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true}}},"required":true},"options":{"fields":{"scenes":{"label":"List of scenes to activate","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"}}}}},"id":"RoundRobinScenes","className":"RoundRobinScenes","created":false},{"singleton":false,"category":"scheduling","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Scheduler","description":"Execute scheduled scene.","weekdays":[1,2,3,4,5,6,0],"time":"00:00","scene":""},"schema":{"type":"object","properties":{"weekdays":{"type":"array","enum":[1,2,3,4,5,6,0],"required":true},"time":{"type":"string","required":true},"scene":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true}},"required":true},"options":{"fields":{"weekdays":{"type":"checkbox","optionLabels":["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]},"time":{"type":"time","maskString":"99:99","timeFormat":"hh:mm","timeFormatRegex":"/^(([0-1][0-9])|([2][0-3])):([0-5][0-9])$/"},"scene":{"label":"Activate scene","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"}}},"id":"ScheduledScene","className":"ScheduledScene","created":false},{"singleton":false,"category":"security","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Security mode","description":"Security mode allows to trigger scenes based on devices status.","tests":[],"action":{"api_key":"","phone":"","message":"Alert!"}},"schema":{"type":"object","properties":{"tests":{"type":"array","items":{"type":"object","properties":{"testType":{"type":"string","enum":["binary","multilevel","remote"],"required":true,"default":"binary"},"testBinary":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorBinary:deviceId,namespaces:devices_switchBinary:deviceId","required":true},"testValue":{"type":"string","enum":["on","off"],"required":true,"default":"on"}}},"testMultilevel":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorMultilevel:deviceId,namespaces:devices_switchMultilevel:deviceId","required":true},"testOperator":{"type":"string","enum":["=","!=",">",">=","<","<="],"required":true},"testValue":{"type":"number","required":true}}},"testRemote":{"type":"object","dependencies":"testType","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchControl:deviceId","required":true},"testValue":{"type":"string","enum":["on","off","upstart","upstop","downstart","downstop"],"required":true}}}}}},"action":{"type":"object","properties":{"phone":{"required":false,"pattern":"[1-9][0-9]*"},"message":{"required":false},"api_key":{"required":false,"pattern":"[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{8}"},"switches":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchBinary:deviceId","required":true},"status":{"type":"number","required":true,"enum":["on","off"],"default":true}}}},"dimmers":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchMultilevel:deviceId","required":true},"status":{"required":true,"minimum":0,"maximum":99}}}},"locks":{"type":"array","items":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_doorlock:deviceId","required":true},"status":{"type":"number","required":true,"enum":["open","close"]}}}},"scenes":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_toggleButton:deviceId","required":true}}},"required":false}}},"options":{"fields":{"tests":{"label":"Sensors","fields":{"item":{"fields":{"testType":{"type":"select","default":""},"testBinary":{"label":"Binary condition","dependencies":{"testType":"binary"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorBinary:deviceName,namespaces:devices_switchBinary:deviceName"}}},"testMultilevel":{"label":"Multilevel condition","dependencies":{"testType":"multilevel"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorMultilevel:deviceName,namespaces:devices_switchMultilevel:deviceName"},"testOperator":{"type":"select","optionLabels":["=","≠",">","≥","<","≤"]}}},"testRemote":{"label":"Remote condition","dependencies":{"testType":"remote"},"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchControl:deviceName"}}}}}}},"action":{"label":"Actions","fields":{"phone":{"label":"Phone number to send SMS. In form of 79261234567"},"message":{"label":"Message"},"api_key":{"label":"API key from SMS.ru","helper":"After registration on the right you will see api_id (looks like a43f6376-f57d-27e4-5981-ec48945d871f)"},"switches":{"label":"List of switches","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName"},"status":{"label":"","optionLabels":["On","Off"]}}}}},"dimmers":{"label":"List of dimmers","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchMultilevel:deviceName"},"status":{"label":"State","type":"integer"}}}}},"locks":{"label":"List of locks","fields":{"item":{"fields":{"device":{"label":"","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_doorlock:deviceName"},"status":{"label":"","optionLabels":["Open","Close"]}}}}},"scenes":{"label":"List of scenes to activate","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_toggleButton:deviceName"}}}}}}},"id":"SecurityMode","className":"SecurityMode","created":false},{"dependencies":[],"singleton":false,"category":"logging","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.1","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Sensor values logging","description":"Store sensor values in JSON file or via HTTP requests to your server","device":""},"schema":{"type":"object","properties":{"device":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorBinary:deviceId,namespaces:devices_sensorMultilevel:deviceId","required":true},"logTo":{"enum":["JSONFile","HTTPGET"],"required":true},"url":{"type":"string","depends":"logTo","required":true,"dependencies":"logTo"}},"required":false},"options":{"fields":{"device":{"label":"Sensor to log","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorBinary:deviceName,namespaces:devices_sensorMultilevel:deviceName"},"logTo":{"label":"How to store:","optionLables":["to JSON file in storage","send via HTTP request"]},"url":{"label":"HTTP request to do. Strings ${id} and ${value} are replaced by sensor ID and value correspondingly","helper":"Example: http://mydomainname.org/path/to/something/${id}?myval=${value}","dependencies":{"logTo":"HTTPGET"}}}},"id":"SensorValueLogging","className":"SensorValueLogging","created":false},{"dependencies":["Cron"],"singleton":false,"category":"scheduling","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Poll sensors periodically","description":"Regular sensors polling","devices":[],"period":60},"schema":{"type":"object","properties":{"devices":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorBinary:deviceId,namespaces:devices_sensorMultilevel:deviceId","required":true,"minItems":1}},"period":{"type":"select","required":true,"enum":[1,2,5,10,20,30,60,120,240,360,720,1440,10080]}},"required":false},"options":{"fields":{"devices":{"label":"Sensors to poll:","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorBinary:deviceName,namespaces:devices_sensorMultilevel:deviceName"}}},"period":{"label":"Poll period","optionLabels":["1 minute","2 minute","5 minute","10 minute","20 minute","30 minute","1 hour","2 hours","4 hours","6 hours","twice per day","daily","weekly"]}}},"id":"SensorsPolling","className":"SensorsPolling","created":false},{"autoload":false,"singleton":true,"userView":true,"defaults":{"title":"Poll sensors and log values periodically","description":"Regular sensors polling and logging","devices":[],"period":60},"schema":{"type":"object","properties":{"devices":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorBinary:deviceId,namespaces:devices_sensorMultilevel:deviceId","required":true}},"period":{"type":"select","required":true,"enum":[1,2,5,10,20,30,60,120,240,360,720,1440,10080]},"logTo":{"enum":["JSONFile","HTTPGET"],"required":true},"url":{"type":"string","depends":"logTo","required":true,"dependencies":"logTo"}},"required":false},"options":{"fields":{"devices":{"label":"Sensors to poll:","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_sensorBinary:deviceName,namespaces:devices_sensorMultilevel:deviceName"}}},"period":{"label":"Poll period","optionLabels":["1 minute","2 minute","5 minute","10 minute","20 minute","30 minute","1 hour","2 hours","4 hours","6 hours","twice per day","daily","weekly"]},"logTo":{"label":"How to store:","optionLables":["to JSON file in storage","send via HTTP request"]},"url":{"label":"HTTP request to do. Strings ${id} and ${value} are replaced by sensor ID and value correspondingly","helper":"Example: http://mydomainname.org/path/to/something/${id}?myval=${value}","dependencies":{"logTo":"HTTPGET"}}}},"id":"SensorsPollingLogging","className":"SensorsPollingLogging","created":false},{"dependencies":[],"singleton":true,"category":"peripherals","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Trap events from Remotes and Sensors","description":"Generates new widgets on the fly for Remote Switch Controls and other devices sending control commands to controller","trapNew":true,"generated":[],"banned":[]},"schema":{"type":"object","properties":{"trapNew":{"type":"boolean"},"banned":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchControl:deviceId","required":true}},"generated":{"type":"array","items":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchControl:deviceId","required":true}}},"required":false},"options":{"fields":{"trapNew":{"label":"","rightLabel":"Create control device for new remote controls and switches"},"banned":{"label":"List of remotes and switches not to instanciate","fields":{"item":{"type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchControl:deviceName"}}},"generated":{"label":"List of remotes and switches to instanciate (filled automatically)","fields":{"item":{"type":"select","readonly":true,"datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchControl:deviceName"}}}}},"id":"SwitchControlGenerator","className":"SwitchControlGenerator","created":false},{"dependencies":[],"singleton":false,"category":"tagging","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Tag devices with On/Off","description":"Mark devices with On/Off tags depending on their state.","tagOn":"On","tagOff":"Off"},"schema":{"type":"object","properties":{"tagOn":{"type":"string","required":true},"tagOff":{"type":"string","required":true}}},"options":{"fields":{"tagOn":{"label":"Tag for On state"},"tagOff":{"label":"Tag for Off state"}}},"id":"TagOnOff","className":"TagOnOff","created":false},{"dependencies":[],"singleton":false,"category":"climate","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Thermostat based on switch and sensor","description":"Create thermostat devices based on a switch and temperature sensor","switch":"","sensor":"","heaton":true},"schema":{"type":"object","properties":{"switch":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_switchBinary:deviceId","required":true},"sensor":{"field":"enum","datasource":"namespaces","enum":"namespaces:devices_sensorMultilevel:deviceId","required":true},"heaton":{"enum":[true,false],"required":true},"hysteresis":{"minimum":0,"maximum":5,"required":true}},"required":false},"options":{"fields":{"switch":{"label":"Switch","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName"},"sensor":{"label":"Temperature sensor","type":"select","datasource":"namespaces","field":"optionLabels","optionLabels":"namespaces:devices_switchBinary:deviceName"},"heaton":{"label":"Mode","type":"select","optionLabels":["Heat","Cool"]},"hysteresis":{"label":"Hysteresis","type":"float","helper":"Maximal delta between current and target temperature after which thermostat should turn on/off"}}},"id":"ThermostatDevice","className":"ThermostatDevice","created":false},{"singleton":false,"category":"environment","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"1.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Yandex Probki","description":"Traffic Jam provided by Yandex.ru","city":""},"schema":{"type":"object","properties":{"city":{"type":"string","enum":["Moscow","Saint Petersburg","Kaluga","Kursk","Lipetsk","Orel","Ryazan","Tver","Tula","Yaroslavl","Vologda","Kaliningrad","Murmansk","Veliky Novgorod","Pskov","Krasnodar","Stavropol","Astrahan","Volgograd","Rostov-na-Donu","Saransk","Kazan","Izhevsk","Kirov","Nizhny Novgorod","Orenburg","Penza","Perm","Samara","Yekaterinburg","Tyumen","Chelyabinsk","Krasnoyarsk","Irkutsk","Kemerovo","Novosibirsk","Omsk","Tomsk","Vladivostok","Khabarovsk","Dnipropetrovsk","Donetsk","Kyiv","Lvov","Odessa","Simferopol","Kharkiv","Nikolaev","Minsk","Almaty","Astana","Ufa","Vladimir","Voronezh","Saratov","Ulyanovsk","Barnaul","Luhansk","Naberezhnie Chelny","Sochi","Zaporizhia","Khmelnitsky","Kherson","Vinnytsia","Poltava","Sumy","Chernihiv","Cherepovets","Novorossiysk","Taganrog","Tuapse","Anapa","Kryvyi Rih","Rovno","Ternopol","Uzhgorod","Cherkassi","Mariupol","Bila Tserkva","Gelendgik","Adana","Ankara","Bursa","İzmir","Istanbul","Antalya","Kirovohrad","Lutck","Kremenchuk","Horlivka","Konya","Gaziantep"],"default":"Moscow","required":true}},"required":true},"options":{"fields":{"city":{"type":"select"}}},"id":"YandexProbki","className":"YandexProbki","created":false},{"dependencies":[],"singleton":false,"category":"peripherals","author":"Z-Wave.Me","homepage":"http://razberry.z-wave.me","icon":"","version":"2.0.0","maturity":"stable","repository":{"type":"git","source":"https://github.com/Z-Wave-Me/home-automation"},"defaults":{"title":"Z-Wave binding","description":"Loads Z-Wave engine","name":"zway","port":"/dev/ttyUSB0","config":"config","translations":"translations","ZDDX":"ZDDX","closeOnExit":true},"schema":{"type":"object","properties":{"port":{"type":"string","required":true},"name":{"type":"string","required":true},"config":{"type":"string","required":true},"translations":{"type":"string","required":true},"ZDDX":{"type":"string","required":true}},"required":false},"options":{"fields":{"port":{"label":"Serial port to Z-Wave dongle"},"name":{"label":"Internal name","helper":"Chould be a valid JS key string. Don't change unless you know what you are doing"},"config":{"hidden":true,"label":"Path to config folder","helper":"Don't change unless you know what you are doing"},"translations":{"hidden":true,"label":"Path to dictionaries folder","helper":"Don't change unless you know what you are doing"},"ZDDX":{"hidden":true,"label":"Path to ZDDX database","helper":"Don't change unless you know what you are doing"}}},"id":"ZWave","className":"ZWave","created":false}],"code":200,"message":"200 OK","error":null}